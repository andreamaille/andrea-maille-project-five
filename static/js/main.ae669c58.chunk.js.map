{"version":3,"sources":["RelatedArtists.js","RelatedTracks.js","Animation.js","Footer.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["RelatedArtists","this","props","scrollToMyRef","react_default","a","createElement","className","artist","href","albumUrl","src","imageUrl","alt","albumName","playCount","Component","RelatedTracks","react","songUrl","songName","Animation","Footer","src_Animation","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","userInput","target","value","handleClick","preventDefault","userArtist","state","isHidden","callApiSimilarArtists","searchAgain","axios","method","url","dataResponse","params","api_key","limit","autocorrect","format","then","response","data","similarartists","similarArtists","length","noResults","database","ref","push","getArtistInfo","catch","error","resetForm","searchError","artistName","toConsumableArray","map","name","relatedArtistArray","forEach","callApiTopAlbums","callApiTopTracks","getFirebaseArtists","topalbums","album","albumArray","relatedArtistInfo","isLoading","alert","toptracks","track","topTracksArray","relatedArtistTracks","limitToLast","on","previousArtists","val","key","id","recentlyViewedArtists","artistSearch","selectedArtist","currentTarget","dataset","isReset","isArtistUnknown","window","scrollTo","headingElement","current","offsetTop","React","createRef","_this2","tabIndex","action","htmlFor","onChange","type","placeholder","modules","activeClass","to","spy","smooth","offset","duration","onClick","aria-label","role","aria-live","info","index","image","src_RelatedArtists","playcount","indexTrack","src_RelatedTracks","headingRef","data-id","src_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8PA8BeA,qMAzBbC,KAAKC,MAAMC,iDAGX,OACCC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,UAAKL,KAAKC,MAAMM,QAChBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,KAAGG,KAAMR,KAAKC,MAAMQ,UAEnBN,EAAAC,EAAAC,cAAA,OAAKK,IAAKV,KAAKC,MAAMU,SAAUC,IAAI,QAGrCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdH,EAAAC,EAAAC,cAAA,KAAGG,KAAMR,KAAKC,MAAMQ,SAAUH,UAAU,cACvCH,EAAAC,EAAAC,cAAA,sBAAcL,KAAKC,MAAMY,YAE1BV,EAAAC,EAAAC,cAAA,kBAAUL,KAAKC,MAAMa,qBApBEC,cCYdC,EAZO,SAACf,GACrB,OACEE,EAAAC,EAAAC,cAACY,EAAA,SAAD,KACDd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGG,KAAMP,EAAMiB,QAASZ,UAAU,uBAC/BL,EAAMkB,aCmBEC,EAxBG,SAACnB,GAClB,OACCE,EAAAC,EAAAC,cAACY,EAAA,SAAD,KACCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aCHJe,EAdA,SAACpB,GACf,OACCE,EAAAC,EAAAC,cAACY,EAAA,SAAD,KACCd,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,kCAAyBF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,oCAAR,8CCE9Be,IAASC,cAVM,CACXC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,wCAKIR,QAAf,ECkWeS,cArWb,SAAAA,IAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAlC,KAAAgC,IACbC,EAAAC,OAAAE,EAAA,EAAAF,CAAAlC,KAAAkC,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAtC,QAmBFuC,aAAe,SAACC,GACdP,EAAKQ,SAAS,CACZC,UAAWF,EAAMG,OAAOC,SAtBbX,EA0BfY,YAAc,SAACL,GACbA,EAAMM,iBAEN,IAAMC,EAAad,EAAKe,MAAMN,UAE9BT,EAAKQ,SAAS,CACZM,WAAYA,EACZE,UAAU,GACT,WACDhB,EAAKiB,wBACLjB,EAAKkB,iBApCMlB,EAyCfiB,sBAAwB,WAEtBE,IAAM,CACJC,OAAQ,MACRC,IAAK,qCACLC,aAAc,OACdC,OAAQ,CACNC,QANW,mCAOXJ,OAAQ,oBACR9C,OAAQ0B,EAAKe,MAAMD,WACnBW,MAAO,EACPC,YAAa,EACbC,OAAQ,UAETC,KAAK,SAACC,GACPA,EAAWA,EAASC,KAAKC,eAAezD,OACxC0B,EAAKQ,SAAS,CACZwB,eAAgBH,GACf,WAE0C,IAArC7B,EAAKe,MAAMiB,eAAeC,OAC5BjC,EAAKkC,aAGS5C,EAAS6C,WAAWC,MAC5BC,KAAKrC,EAAKe,MAAMN,WAEtBT,EAAKsC,qBAGVC,MAAM,SAAAC,GAEPxC,EAAKyC,YACLzC,EAAK0C,iBA1EM1C,EA+EfsC,cAAgB,WACd,IACMK,EADc1C,OAAA2C,EAAA,EAAA3C,CAAOD,EAAKe,MAAMiB,gBACJa,IAAI,SAAAvE,GACpC,OAAOA,EAAOwE,OAEhB9C,EAAKQ,SAAS,CACZuC,mBAAoBJ,GACnBA,EAAWK,QAAQ,SAAA1E,GACpB0B,EAAKiD,iBAAiB3E,GACtB0B,EAAKkD,iBAAiB5E,MAExB0B,EAAKmD,sBA1FQnD,EA8FfiD,iBAAmB,SAACN,GAElBxB,IAAM,CACJC,OAAQ,MACRC,IAAK,qCACLC,aAAc,OACdC,OAAQ,CACNC,QANW,mCAOXJ,OAAQ,sBACR9C,OAAQqE,EACRlB,MAAO,EACPC,YAAa,EACbC,OAAQ,UAETC,KAAK,SAACC,GACPA,EAAWA,EAASC,KAAKsB,UAAUC,MAAM,GAEzC,IAAMC,EAAUrD,OAAA2C,EAAA,EAAA3C,CAAOD,EAAKe,MAAMwC,mBAElCD,EAAWjB,KAAKR,GAEhB7B,EAAKQ,SAAS,CACZ+C,kBAAmBD,EACnBE,WAAU,MAEXjB,MAAM,SAAAC,GACPiB,MAAM,6FAxHKzD,EA6HfkD,iBAAmB,SAACP,GAElBxB,IAAM,CACJC,OAAQ,MACRC,IAAK,qCACLC,aAAc,OACdC,OAAQ,CACNC,QANW,mCAOXJ,OAAQ,sBACR9C,OAAQqE,EACRlB,MAAO,EACPC,YAAa,EACbC,OAAQ,UAETC,KAAK,SAACC,GACPA,EAAWA,EAASC,KAAK4B,UAAUC,MAEnC,IAAMC,EAAc3D,OAAA2C,EAAA,EAAA3C,CAAOD,EAAKe,MAAM8C,qBAEtCD,EAAevB,KAAKR,GAEpB7B,EAAKQ,SAAS,CACZqD,oBAAqBD,MAGtBrB,MAAM,SAAAC,GACPiB,MAAM,6FAvJKzD,EA4JfmD,mBAAqB,WACL7D,EAAS6C,WAAWC,MAAM0B,YAAY,GAE9CC,GAAG,QAAS,SAAClC,GACjB,IAAMmC,EAAkB,GAClBlC,EAAOD,EAASoC,MAEtB,IAAK,IAAIC,KAAOpC,EACdkC,EAAgB3B,KAAK,CACnB8B,GAAID,EACJpB,KAAMhB,EAAKoC,KAIflE,EAAKQ,SAAS,CACZ4D,sBAAuBJ,OA3KdhE,EAiLfqE,aAAe,SAAC9D,GACdA,EAAMM,iBAEN,IAAMyD,EAAiB/D,EAAMgE,cAAcC,QAAQL,GAGnDnE,EAAKQ,SAAS,CACZC,UAAW6D,EACXxD,WAAYwD,EACZvB,mBAAoB,GACpBQ,kBAAmB,GACnBM,oBAAqB,GACrBO,sBAAuB,IACtB,WACDpE,EAAKiB,2BA/LMjB,EAoMfyC,UAAY,WACVzC,EAAKQ,SAAS,CACZgD,WAAU,EACViB,SAAS,EACTzD,UAAU,EACV0D,iBAAiB,EACjBxC,WAAU,EACVpB,WAAY,GACZL,UAAW,GACXsC,mBAAoB,GACpBQ,kBAAmB,GACnBM,oBAAqB,MA/MV7D,EAoNfkB,YAAc,WACZlB,EAAKQ,SAAS,CACZgD,WAAW,EACXiB,SAAS,EACTC,iBAAgB,EAChBxC,WAAW,KAzNAlC,EA8Nf0C,YAAc,WACZ1C,EAAKQ,SAAS,CACZkE,iBAAiB,KAhON1E,EAqOfkC,UAAY,WACVlC,EAAKQ,SAAS,CACZQ,UAAS,EACTkB,WAAW,EACXwC,iBAAiB,EACjBD,SAAS,KA1OEzE,EA+Of/B,cAAgB,WACd0G,OAAOC,SAAS,EAAG5E,EAAK6E,eAAeC,QAAQC,YA7O/C/E,EAAK6E,eAAiBG,IAAMC,YAE5BjF,EAAKe,MAAQ,CACXyC,WAAU,EACVxC,UAAS,EACTyD,SAAS,EACTC,iBAAgB,EAChBxC,WAAU,EACVpB,WAAW,GACXL,UAAU,GACVsC,mBAAmB,GACnBQ,kBAAkB,GAClBM,oBAAoB,GACpBO,sBAAuB,IAhBZpE,wEAmPN,IAAAkF,EAAAnH,KACP,OACEG,EAAAC,EAAAC,cAACY,EAAA,SAAD,KACEd,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,MAAI+G,SAAS,KAAb,mBACEjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB8G,SAAS,KACxCjH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,iCACAH,EAAAC,EAAAC,cAAA,mHAEHL,KAAKgD,MAAM0D,QAEVvG,EAAAC,EAAAC,cAAA,QAAMgH,OAAO,iBAAiBhE,OAAO,OAAO0B,KAAK,kBAC/C5E,EAAAC,EAAAC,cAAA,SAAOiH,QAAQ,gBAAgBhH,UAAU,mBAAzC,qBACAH,EAAAC,EAAAC,cAAA,SACEkH,SAAUvH,KAAKuC,aACfiF,KAAK,OACLC,YAAY,oBACZ7E,MAAO5C,KAAKgD,MAAMN,UAClB0D,GAAG,gBACHrB,KAAK,kBAGP5E,EAAAC,EAAAC,cAACqH,EAAA,KAAD,CACEC,YAAY,SACZC,GAAG,kBACHxB,GAAG,kBACHyB,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KACV7H,EAAAC,EAAAC,cAAA,UAAQ4H,QAASjI,KAAK6C,YAAavC,UAAU,qBAAqB4H,aAAW,4FAA7E,YAMJ/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACiB,EAAD,MACAnB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,UAAQ4H,QAASjI,KAAK0E,UAAWpE,UAAU,uBAA3C,8BAIDN,KAAKgD,MAAM2D,gBAAkB,IAAMxG,EAAAC,EAAAC,cAAA,KAAG+G,SAAS,IAAI9G,UAAU,iBAA1B,gFAGnCN,KAAKgD,MAAMmB,UAAY,IAAMhE,EAAAC,EAAAC,cAAA,KAAG+G,SAAS,IAAI9G,UAAU,iBAA1B,oCAA2EH,EAAAC,EAAAC,cAAA,YAAOL,KAAKgD,MAAMD,YAA7F,4BAKrC/C,KAAKgD,MAAMyC,UAAY,IACtBtF,EAAAC,EAAAC,cAAA,QAAM8H,KAAK,SAASC,YAAU,UAC5BjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBAAkB8F,GAAG,mBACtCjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIgE,IAAKrE,KAAK8G,eAAgBM,SAAS,KAAvC,mBACAjH,EAAAC,EAAAC,cAAA,KAAGG,KAAK,kBAAkBF,UAAU,6BAApC,iEACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACTN,KAAKgD,MAAMwC,kBAAkBV,IAAI,SAACuD,EAAMC,GACvC,IAAI3H,EAAW0H,EAAKE,MAAM,GAAG,SAC7B,OACEpI,EAAAC,EAAAC,cAACmI,EAAD,CAAgBrC,IAAKmC,EAAO3H,SAAUA,EAAUJ,OAAQ8H,EAAK9H,OAAOwE,KAAMtE,SAAU4H,EAAK9H,OAAO+C,IAAKxC,UAAWuH,EAAKI,UAAW5H,UAAWwH,EAAKtD,KAAM7E,cAAeiH,EAAKjH,qBAMtLC,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBAAiB8F,GAAG,kBACrCjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,MAAI+G,SAAS,KAAb,kBAAiCpH,KAAKgD,MAAMD,YAC5C5C,EAAAC,EAAAC,cAAA,KAAGG,KAAK,2BAA2BF,UAAU,6BAA7C,mEACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBACXN,KAAKgD,MAAM8C,oBAAoBhB,IAAI,SAACc,EAAO0C,GAC1C,OACE1C,EAAMd,IAAI,SAACwD,EAAOI,GAChB,OACEvI,EAAAC,EAAAC,cAACsI,EAAD,CAAexC,IAAKuC,EAAYE,WAAYzB,EAAKL,eAAgB3F,SAAUmH,EAAMvD,KAAM7D,QAASoH,EAAMhF,aASpHnD,EAAAC,EAAAC,cAAA,WAASC,UAAU,0BAA0B8F,GAAG,2BAC9CjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,MAAI+G,SAAS,KAAb,2BACAjH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACXN,KAAKgD,MAAMqD,sBAAsBvB,IAAI,SAACvE,EAAQ+H,GAC7C,OACEnI,EAAAC,EAAAC,cAAA,MAAI8F,IAAKmC,EAAOhI,UAAU,sBAAsB2H,QAASd,EAAKb,aAAcuC,UAAStI,EAAOwE,MACxF5E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAc8G,SAAUkB,GAAQ/H,EAAOwE,UAK9D5E,EAAAC,EAAAC,cAAA,UAAQmH,KAAK,QAAQS,QAASjI,KAAK0E,UAAWpE,UAAU,wBAAxD,oBAMTN,KAAKgD,MAAMC,SAAW,IACrB9C,EAAAC,EAAAC,cAACyI,EAAD,cA/VQ/H,aCEEgI,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOjJ,EAAAC,EAAAC,cAACgJ,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7F,KAAK,SAAA8F,GACjCA,EAAaC","file":"static/js/main.ae669c58.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass RelatedArtists extends Component {\n\t// for accessibility, to ensure that screen readers are taken to the beginning of the dynamic content\n\tcomponentDidMount(){\n\t\tthis.props.scrollToMyRef();\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<li className=\"related-artist-card\">\n\t\t\t\t<div className=\"inner-wrapper\">\n\t\t\t\t\t<h3>{this.props.artist}</h3>\n\t\t\t\t\t<div className=\"image-container\">\n\t\t\t\t\t\t<a href={this.props.albumUrl}>\n\t\t\t\t\t\t\t{/* these images are decorative, no alt text content*/}\n\t\t\t\t\t\t\t<img src={this.props.imageUrl} alt=\" \"/>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"album-info\">\n\t\t\t\t\t\t<a href={this.props.albumUrl} className=\"album-link\">\n\t\t\t\t\t\t\t<p>Listen to {this.props.albumName}</p>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<p>Plays:{this.props.playCount}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t)\n\t}\n}\n\nexport default RelatedArtists;\n\n","import React, { Fragment } from 'react'\n\nconst RelatedTracks = (props) => {\n  return (\n    <Fragment>\n\t\t\t<li className=\"related-tracks-names\">\n\t\t\t\t<a href={props.songUrl} className=\"related-track-links\">\n\t\t\t\t\t\t{props.songName}\n\t\t\t\t</a>\n\t\t\t</li>\n  </Fragment>\n  )\n}\n\nexport default RelatedTracks;","import React, { Fragment } from 'react'\n\nconst Animation = (props) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"spinner\">\n\t\t\t\t<div className=\"rect1\"></div>\n\t\t\t\t<div className=\"rect2\"></div>\n\t\t\t\t<div className=\"rect3\"></div>\n\t\t\t\t<div className=\"rect4\"></div>\n\t\t\t\t<div className=\"rect5\"></div>\n\t\t\t\t<div className=\"rect1\"></div>\n\t\t\t\t<div className=\"rect2\"></div>\n\t\t\t\t<div className=\"rect3\"></div>\n\t\t\t\t<div className=\"rect4\"></div>\n\t\t\t\t<div className=\"rect5\"></div>\n\t\t\t\t<div className=\"rect1\"></div>\n\t\t\t\t<div className=\"rect2\"></div>\n\t\t\t\t<div className=\"rect3\"></div>\n\t\t\t\t<div className=\"rect4\"></div>\n\t\t\t\t<div className=\"rect5\"></div>\n\t\t\t</div>\n\t\t</Fragment>\n\t)\n}\n\nexport default Animation;","import React, { Fragment } from 'react'\nimport Animation from './Animation.js'\n\nconst Footer = (props) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<footer>\n\t\t\t\t<div className=\"footer-text\">\n\t\t\t\t\t<Animation />\n\t\t\t\t\t<p> &copy; 2019</p>\n\t\t\t\t\t<p>Designed and coded by <a href=\"https://twitter.com/andrea_codes\">andrea_codes</a></p>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t</Fragment>\n\t)\n}\n\nexport default Footer;","import firebase from 'firebase';\n\nconst config = {\n    apiKey: \"AIzaSyDuTCV6q-STDeYeH75CRP0fCxAQOaSLOp0\",\n    authDomain: \"next-on-shuffle.firebaseapp.com\",\n    databaseURL: \"https://next-on-shuffle.firebaseio.com\",\n    projectId: \"next-on-shuffle\",\n    storageBucket: \"next-on-shuffle.appspot.com\",\n    messagingSenderId: \"812406334305\",\n    appId: \"1:812406334305:web:0698567276d72ea0\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n\n","import React, { Component, Fragment } from 'react';\nimport axios from 'axios'\nimport './styles/App.scss';\nimport RelatedArtists from './RelatedArtists.js'\nimport RelatedTracks from './RelatedTracks.js'\nimport Animation from './Animation.js'\nimport Footer from './Footer.js'\nimport { Link } from 'react-scroll'\nimport firebase from './firebase';\n\nclass App extends Component {\n  constructor () {\n    super();\n    // Ref for accessibility of dynamic content\n    this.headingElement = React.createRef();\n    // stored data  \n    this.state = {\n      isLoading:true,\n      isHidden:true,\n      isReset: true,\n      isArtistUnknown:true,\n      noResults:true,\n      userArtist:'',\n      userInput:'',\n      relatedArtistArray:[],\n      relatedArtistInfo:[],\n      relatedArtistTracks:[],\n      recentlyViewedArtists: []\n    }\n  }\n  // binds the input\n  handleChange = (event) => {\n    this.setState({\n      userInput: event.target.value\n    })\n  }\n  // on click of search button, the user input will be stored and then used to call the API. searchAgain function is also called to hide search bar and display message asking user if they would like to search for a different artist\n  handleClick = (event) => {\n    event.preventDefault();\n    //save user input \n    const userArtist = this.state.userInput;\n     // store user input in state\n    this.setState({\n      userArtist: userArtist,\n      isHidden: false\n    }, () => {\n      this.callApiSimilarArtists();\n      this.searchAgain();\n    })\n  }\n\n  // calls Api to get similar artists based on user's chosen artist\n  callApiSimilarArtists = () => {\n    const apiKey = '4fb1117993625941ed0d8edc14f7ed9a';\n    axios({\n      method: 'GET',\n      url: 'https://ws.audioscrobbler.com/2.0/',\n      dataResponse: 'JSON',\n      params: {\n        api_key: apiKey,\n        method: 'artist.getSimilar',\n        artist: this.state.userArtist,\n        limit: 6,\n        autocorrect: 1,\n        format: 'json'\n      }\n    }).then((response) => {\n      response = response.data.similarartists.artist\n      this.setState({\n        similarArtists: response,\n      }, () => {\n          // if API has no similar artist suggestions for user's chosen artist, displays message to user to choose a different artist\n          if (this.state.similarArtists.length === 0) {\n            this.noResults();\n          } else {\n            // if API has similar artists suggestions for user's chosen artist, stores user input in firebase\n            const dbRef = firebase.database().ref() \n            dbRef.push(this.state.userInput);\n            // calls function to map over similarArtist array to pass to other API calls\n            this.getArtistInfo();\n          }\n      });\n    }).catch(error => {\n      //if user's chosen artist can not be found in API data, call functions to reset the form and display error message\n      this.resetForm();\n      this.searchError();\n    })\n  }\n\n  // maps over similarArtists array to get artist names to pass to other Api calls. Also calls getFirebaseArtists function to get recently searched artists stored in Firebase\n  getArtistInfo = () => {\n    const relatedArtists = [...this.state.similarArtists];\n    const artistName = relatedArtists.map(artist => {\n      return(artist.name);\n    })\n    this.setState({\n      relatedArtistArray: artistName\n    }, artistName.forEach(artist => { \n      this.callApiTopAlbums(artist);\n      this.callApiTopTracks(artist);\n    }));\n    this.getFirebaseArtists();\n  }\n\n  // secondary API call to get album data of similar artists\n  callApiTopAlbums = (artistName) => {\n    const apiKey = '4fb1117993625941ed0d8edc14f7ed9a';\n    axios({\n      method: 'GET',\n      url: 'https://ws.audioscrobbler.com/2.0/',\n      dataResponse: 'JSON',\n      params: {\n        api_key: apiKey,\n        method: 'artist.getTopAlbums',\n        artist: artistName,\n        limit: 6,\n        autocorrect: 1,\n        format: 'json'\n      }\n    }).then((response) => {\n      response = response.data.topalbums.album[0]\n\n      const albumArray = [...this.state.relatedArtistInfo];\n      \n      albumArray.push(response);\n\n      this.setState({\n        relatedArtistInfo: albumArray,\n        isLoading:false\n      })\n    }).catch(error => {\n      alert('Sorry - we failed to get data back from our API at this time. Please check back later!');\n    })\n  }\n\n  // secondary API call to get top tracks of similar artists\n  callApiTopTracks = (artistName) => {\n    const apiKey = '4fb1117993625941ed0d8edc14f7ed9a';\n    axios({\n      method: 'GET',\n      url: 'https://ws.audioscrobbler.com/2.0/',\n      dataResponse: 'JSON',\n      params: {\n        api_key: apiKey,\n        method: 'artist.gettoptracks',\n        artist: artistName,\n        limit: 6,\n        autocorrect: 1,\n        format: 'json'\n      }\n    }).then((response) => {\n      response = response.data.toptracks.track\n\n      const topTracksArray = [...this.state.relatedArtistTracks];\n\n      topTracksArray.push(response)\n\n      this.setState({\n        relatedArtistTracks: topTracksArray\n      })\n      \n    }).catch(error => {\n      alert('Sorry - we failed to get data back from our API at this time. Please check back later!');\n    })\n  }\n\n  // grabs the last 5 values in firebase database to display on page in Recently Viewed Artists section\n  getFirebaseArtists = () => {\n    const dbRef = firebase.database().ref().limitToLast(5)\n\n    dbRef.on('value', (response) => {\n      const previousArtists = [];\n      const data = response.val()\n\n      for (let key in data) {\n        previousArtists.push({\n          id: key,\n          name: data[key],\n        });\n      }\n\n      this.setState({\n        recentlyViewedArtists: previousArtists\n      })\n    })\n  }\n\n  // on click of an artist in Recently Viewed Artist Section, searches for similar artists \n  artistSearch = (event) => {\n    event.preventDefault();\n\n    const selectedArtist = event.currentTarget.dataset.id;\n\n    // sets the userInput and userArtist values to the artist's name that was clicked on and clears the arrays to accept new data from the API calls\n    this.setState({\n      userInput: selectedArtist,\n      userArtist: selectedArtist,\n      relatedArtistArray: [],\n      relatedArtistInfo: [],\n      relatedArtistTracks: [],\n      recentlyViewedArtists: []\n    }, () => {\n      this.callApiSimilarArtists();\n    })\n  }\n  \n  // Resets the form to accept the next search\n  resetForm = () => {\n    this.setState({\n      isLoading:true,\n      isReset: true,\n      isHidden: true,\n      isArtistUnknown: true,\n      noResults:true,\n      userArtist: '',\n      userInput: '',\n      relatedArtistArray: [],\n      relatedArtistInfo: [],\n      relatedArtistTracks: []\n    })\n  }\n\n  // For error handling - hides search bar and asks user if they would like to search for another artist\n  searchAgain = () => {\n    this.setState({\n      isLoading: true,\n      isReset: false,\n      isArtistUnknown:true,\n      noResults: true\n    })\n  }\n\n  // if artist does not exist in API data, displays message to user\n  searchError = () => {\n    this.setState({\n      isArtistUnknown: false,\n    })\n  }\n\n  // if artist exists in API data but API has no suggestions for similar artists, displays message to user\n  noResults = () => {\n    this.setState({\n      isHidden:true,\n      noResults: false,\n      isArtistUnknown: true,\n      isReset: true\n    })\n  }\n\n  // For accessibility - to ensure that screen readers are taken to the beginning of the dynamic content\n  scrollToMyRef = () => {\n    window.scrollTo(0, this.headingElement.current.offsetTop)\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <header>\n          <div className=\"wrapper header-content\">\n            <div className=\"header-text\">\n              <h1 tabIndex=\"1\">Next on Shuffle</h1>\n                <div className=\"app-description\" tabIndex=\"2\">\n                  <p className=\"subtitle\">New music is waiting for you.</p>\n                  <p>Discover new music with the music you already love. Enter your favorite artist or band to get started</p>\n                </div>\n              {this.state.isReset ?\n\n                <form action=\"search-artists\" method=\"POST\" name=\"search-artists\">\n                  <label htmlFor=\"search-button\" className=\"visually-hidden\">Enter your artist</label>\n                  <input\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    placeholder=\"Search for Artist\"\n                    value={this.state.userInput}\n                    id=\"search-button\"\n                    name=\"search-button\"\n                  />\n\n                  <Link\n                    activeClass=\"active\"\n                    to=\"related-artists\"\n                    id=\"related-artists\"\n                    spy={true}\n                    smooth={true}\n                    offset={-70}\n                    duration={500}>\n                    <button onClick={this.handleClick} className=\"main-search-button\" aria-label=\"After clicking on this button, you will be taken directly to the Related Artists Section\">Search</button>\n                  </Link>\n                </form>\n\n                : \n\n                <div className=\"header-reset\">\n                  <Animation />\n                  <p>Want more music?</p>\n                  <button onClick={this.resetForm} className=\"header-reset-button\">Search for Another Artist</button>\n                </div>\n                }\n                {/* error handling - if artist is not in database */}\n                {this.state.isArtistUnknown ? ' ' : <p tabIndex=\"3\" className=\"error-message\">We couldn't find your requested artist. Please check spelling and try again!</p>}\n\n                {/* error handling - if artist is in database but there are no suggested artists */}\n                {this.state.noResults ? ' ' : <p tabIndex=\"3\" className=\"error-message\">There are no related artists for <span>{this.state.userArtist}</span>. Try another artist!</p>}\n            </div>\n          </div>\n        </header>\n        {/* while page loads, stays on header until API data can be loaded */}\n        {this.state.isLoading ? ' ' :\n          <main role=\"status\" aria-live=\"polite\">\n            <div className=\"wrapper\">\n              <section className=\"related-artists\" id=\"related-artists\">\n                <div className=\"search-results\">\n                  <h2 ref={this.headingElement} tabIndex=\"4\">Related Artists</h2>\n                  <a href=\"#related-tracks\" className=\"visually-hidden skip-link\"> Skip Related Artists Section and to go to Top Tracks Section</a>\n                  <ul className=\"related-artist-results\">\n                      {this.state.relatedArtistInfo.map((info, index) => {\n                        let imageUrl = info.image[3]['#text'];\n                        return (\n                          <RelatedArtists key={index} imageUrl={imageUrl} artist={info.artist.name} albumUrl={info.artist.url} playCount={info.playcount} albumName={info.name} scrollToMyRef={this.scrollToMyRef}/>)\n                      })}\n                  </ul>\n                </div>\n              </section>\n              \n              <section className=\"related-tracks\" id=\"related-tracks\">\n                <div className=\"related-tracks-wrapper\">\n                  <h2 tabIndex=\"5\">Top Tracks for {this.state.userArtist}</h2>\n                  <a href=\"#recently-viewed-section\" className=\"visually-hidden skip-link\"> Skip Top Tracks Section and to go to Recently Searched Artists</a>\n                  <ul className=\"related-artist-tracks\">\n                    {this.state.relatedArtistTracks.map((track, index) => {\n                      return(\n                        track.map((index, indexTrack) => {\n                          return (\n                            <RelatedTracks key={indexTrack} headingRef={this.headingElement} songName={index.name} songUrl={index.url}/>\n                          )\n                        })\n                      )\n                    })}\n                  </ul>\n                </div>\n              </section>\n\n              <section className=\"recently-viewed-section\" id=\"recently-viewed-section\">\n                <div className=\"recently-viewed-wrapper\">\n                  <h2 tabIndex=\"6\">Recently Viewed Artists</h2>\n                  <ul className=\"recent-artists\">\n                    {this.state.recentlyViewedArtists.map((artist, index) => {\n                      return(\n                        <li key={index} className=\"recent-artists-card\" onClick={this.artistSearch} data-id={artist.name}>\n                            <p className=\"artist-name\" tabIndex={index}>{artist.name}</p>\n                        </li>\n                      )\n                    })}\n                  </ul>\n                  <button type=\"reset\" onClick={this.resetForm} className=\"section-reset-button\">Search Again</button>\n                </div>\n              </section>\n            </div>\n          </main>\n        }\n        {this.state.isHidden ? ' ' : \n          <Footer />\n        }\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}